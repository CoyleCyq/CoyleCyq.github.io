(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{575:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_16-闭包和继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-闭包和继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 16 闭包和继承")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AD%E5%8C%85"}},[t._v("闭包")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%97%AD%E5%8C%85%E7%9A%84%E5%A5%BD%E5%A4%84"}},[t._v("闭包的好处")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE"}},[t._v("原型链")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E8%AE%BF%E9%97%AE%E6%9C%BA%E5%88%B6"}},[t._v("原型模式的访问机制")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E9%87%8D%E7%BD%AE%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1"}},[t._v("重置原型对象")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%86%85%E7%BD%AE%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1"}},[t._v("内置原型对象")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E7%9A%84%E9%81%8D%E5%8E%86%E4%B8%8E%E5%88%A4%E6%96%AD"}},[t._v("对象属性的遍历与判断")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%BB%A7%E6%89%BF"}},[t._v("继承")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF"}},[t._v("原型链继承")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%80%9F%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[t._v("借用构造函数")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF"}},[t._v("组合继承")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[t._v("原型式继承")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF%E6%B3%95"}},[t._v("寄生组合继承法")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#ES6Class"}},[t._v("ES6Class")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%BB%A7%E6%89%BF"}},[t._v("继承")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95"}},[t._v("静态方法")])])])])]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("闭包是这样一种机制: 函数嵌套函数, 内部函数可以引用外部函数的参数和变量,参数和变量不会被垃圾回收机制所收回.")]),t._v(" "),s("p",[t._v("这里涉及到几个概念:")]),t._v(" "),s("ol",[s("li",[t._v("函数嵌套函数")]),t._v(" "),s("li",[t._v("作用域(全局变量和局部变量)\n变量的访问规则")]),t._v(" "),s("li",[t._v("垃圾回收机制(garbage collection)\njs内部不断扫描内存,并清理无引用对象(自动完成);")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa中访问num：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bb中访问num："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//bb(); //无法直接访问函数内部的函数")]),t._v("\n")])])]),s("h3",{attrs:{id:"闭包的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的好处","aria-hidden":"true"}},[t._v("#")]),t._v(" 闭包的好处")]),t._v(" "),s("ol",[s("li",[t._v("可以让一个变量长期驻扎在内存当中不被释放")]),t._v(" "),s("li",[t._v("避免全局变量的污染, 和全局变量不同,  闭包中的变量无法被外部使用")]),t._v(" "),s("li",[t._v("私有成员的存在, 无法被外部调用, 只可以自己内部使用")])]),t._v(" "),s("blockquote",[s("p",[t._v("结论：")])]),t._v(" "),s("ul",[s("li",[t._v("闭包是指有权访问另一函数作用域中的变量的函数")]),t._v(" "),s("li",[t._v("闭包，可以访问函数内部的局部变量，并让其长期驻留内存")]),t._v(" "),s("li",[t._v("由于闭包会携带包含它的作用域(运行环境)，因此会比其他函数占用更多内存，过度使用闭包可能会造成性能问题。")])]),t._v(" "),s("p",[t._v("[案例]")]),t._v(" "),s("ul",[s("li",[t._v("点击按钮打印当前索引值")]),t._v(" "),s("li",[t._v("tab标签切换")])]),t._v(" "),s("h2",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("p",[t._v("实例与Object原型对象之间的链条称为原型链")]),t._v(" "),s("h3",{attrs:{id:"原型模式的访问机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型模式的访问机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型模式的访问机制")]),t._v(" "),s("ol",[s("li",[t._v("读取实例对象的属性时，先从实例对象本身开始搜索。如果在实例中找到了这个属性，则返回该属性的值；")]),t._v(" "),s("li",[t._v("如果没有找到，则继续搜索实例的原型对象，如果在原型对象中找到了这个属性，则返回该属性的值")]),t._v(" "),s("li",[t._v("如果还是没找到，则向原型对象的原型对象查找，依此类推，直到Object的原型对象（最顶层对象）；")]),t._v(" "),s("li",[t._v("如果再Object的原型对象中还搜索不到，则抛出错误；")])]),t._v(" "),s("h3",{attrs:{id:"重置原型对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重置原型对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 重置原型对象")]),t._v(" "),s("p",[t._v("重置原型对象，可以一次性给原型对象添加多个方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Popover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Popover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("注意覆盖问题")]),t._v(" "),s("li",[t._v("注意识别问题")])]),t._v(" "),s("h3",{attrs:{id:"内置原型对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置原型对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 内置原型对象")]),t._v(" "),s("p",[t._v("使用内置原型可以给已有构造函数添加方法")]),t._v(" "),s("ul",[s("li",[t._v("数组/字符串/数字等方法调用原理")]),t._v(" "),s("li",[t._v("扩展内置方法")])]),t._v(" "),s("h3",{attrs:{id:"对象属性的遍历与判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性的遍历与判断","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象属性的遍历与判断")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("for…in")]),t._v("：遍历对象中的所有属性, 无论该属性存在于实例中还是原型中")]),t._v(" "),s("li",[t._v("in：只要通过对象能够访问到属性就返回true, 无论该属性存在于实例中还是原型中")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("实例.hasOwnProperty(属性)")]),t._v("：检测一个属性是存在于实例中(true)，还是存在于原型中(false)")]),t._v(" "),s("li",[t._v("检测一个属性是否存在于原型中："),s("code",[t._v("!obj.hasOwnProperty(name) && (name in obj)")])])]),t._v(" "),s("h2",{attrs:{id:"继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),s("p",[t._v("继承是面向对象中一个非常重要的特征。指的是：子类继承父类的属性和方法。")]),t._v(" "),s("blockquote",[s("p",[t._v("我们可以通过继承的方式, 在父类的属性和方法基础上, 让子类也拥有这些属性和方法, 并可以扩展。")])]),t._v(" "),s("ul",[s("li",[t._v("继承的特点:")])]),t._v(" "),s("ol",[s("li",[t._v("子类拥有父类所有的属性和方法（代码复用）；")]),t._v(" "),s("li",[t._v("子类可以扩展自己的属性和方法（更灵活）；")]),t._v(" "),s("li",[t._v("子类可以重写父类的方法")])]),t._v(" "),s("h3",{attrs:{id:"原型链继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型链继承")]),t._v(" "),s("p",[s("code",[t._v("prototype")]),t._v(" 原型链属性(方法)的查找过程：实例–>原型对象–>原型对象… –> Object.prototype")]),t._v(" "),s("blockquote",[s("p",[t._v("PS:原型链继承法一般用于继承方法")])]),t._v(" "),s("h3",{attrs:{id:"借用构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 借用构造函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("call：使用父类函数的call（子类对象,参数1，参数2，参数3......） 最常见")]),t._v(" "),s("p",[t._v("格式：构造函数.call(this,参数1,参数2,参数3......)")])]),t._v(" "),s("li",[s("p",[t._v("apply：使用父类函数的apply（子类对象，[参数1，参数2，参数3]）")]),t._v(" "),s("p",[t._v("格式：父类构造函数.apply(子类当前对象,[参数1,参数2,参数3......]) //第二个参数为数组")])]),t._v(" "),s("li",[s("p",[t._v("call与apply的唯一区别：传参方式不同")])]),t._v(" "),s("li",[s("p",[t._v("借用构造函数法只能继承构造函数里的属性/方法，不能继承原型对象里的方法")])]),t._v(" "),s("li",[s("p",[t._v("借用构造函数法一般用于继承属性")])])]),t._v(" "),s("h3",{attrs:{id:"组合继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 组合继承")]),t._v(" "),s("ul",[s("li",[t._v("继承属性：借用构造函数")]),t._v(" "),s("li",[t._v("继承方法：原型链继承")])]),t._v(" "),s("blockquote",[s("p",[t._v("组合继承是最常用的继承模式。")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("多次执行父类构造函数")]),t._v(" "),s("li",[t._v("在原型对象中生成多余的属性")])]),t._v(" "),s("h3",{attrs:{id:"原型式继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型式继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型式继承")]),t._v(" "),s("p",[t._v("原理：先创建了一个临时性的构造函数，然后将传入的对象作为这个构造函数的原型，最后返回了这个临时类型的一个新实例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("o")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Object.create()：ES5版本的原型式继承")])]),t._v(" "),s("h3",{attrs:{id:"寄生组合继承法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合继承法","aria-hidden":"true"}},[t._v("#")]),t._v(" 寄生组合继承法")]),t._v(" "),s("ul",[s("li",[t._v("继承属性：借用构造函数")]),t._v(" "),s("li",[t._v("继承方法：原型式继承")])]),t._v(" "),s("h2",{attrs:{id:"es6class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6class","aria-hidden":"true"}},[t._v("#")]),t._v(" ES6Class")]),t._v(" "),s("p",[t._v("ES6提供了更接近传统语言的写法，引入了Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("我叫")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",今年")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("岁")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("写在类里面的方法实际是给"),s("code",[t._v("Person.prototype")]),t._v("添加方法\n"),s("code",[t._v("constructor")]),t._v("方法是类的默认方法，通过"),s("code",[t._v("new")]),t._v("命令生成对象实例时，自动调用该方法。如果没有"),s("code",[t._v("constructor")]),t._v("方法，则得使用默认的"),s("code",[t._v("constractor")]),t._v("方法")]),t._v(" "),s("h3",{attrs:{id:"继承-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gender")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this.gender = gender; // 报错")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("      \n")])])]),s("ul",[s("li",[t._v("子类继承了父类，在子类构造函数中必须调用"),s("code",[t._v("super")]),t._v("方法。")]),t._v(" "),s("li",[t._v("子类的"),s("code",[t._v("constructor")]),t._v("方法没有调用super之前，不能使用this关键字，否则报错，而放在super方法之后就是正确的。")])]),t._v(" "),s("h3",{attrs:{id:"静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),s("p",[t._v("如果在一个方法前，加上"),s("code",[t._v("static")]),t._v("关键字，这就称为“静态方法”")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'laoxie'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello everyone, my name is ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", I'm ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" years old")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Man")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("静态方法方法不会被实例继承，而是直接通过类来调用"),s("code",[t._v("Person.getInfo()")])]),t._v(" "),s("li",[t._v("父类的静态方法，可以被子类继承"),s("code",[t._v("Man.getInfo()")])])])])},[],!1,null,null,null);a.default=e.exports}}]);